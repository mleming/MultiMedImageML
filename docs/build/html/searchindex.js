Search.setIndex({"docnames": ["index", "modules", "multi_med_image_ml", "usage"], "filenames": ["index.rst", "modules.rst", "multi_med_image_ml.rst", "usage.rst"], "titles": ["Welcome to Multi-Input Medical Image ML Toolkit\u2019s documentation!", "multi_med_image_ml", "multi_med_image_ml package", "Usage"], "terms": {"index": [0, 1, 2], "search": [0, 2], "page": 0, "usag": 0, "instal": 0, "multi_med_image_ml": 0, "packag": [0, 1], "submodul": [0, 1], "databasewrapp": [0, 1], "modul": [0, 1], "medimageload": [0, 1], "multiinputtest": [0, 1], "multiinputtrain": [0, 1], "record": [0, 1], "model": [0, 1], "util": [0, 1], "databas": [1, 2], "filenam": [1, 2], "label": [1, 2], "confound": [1, 2], "val_rang": [1, 2], "x_dim": [1, 2], "key_to_filenam": [1, 2], "jdict": [1, 2], "column": [1, 2], "add_json": [1, 2], "build_metadata": [1, 2], "get_id": [1, 2], "get_birth_d": [1, 2], "get_confound_encod": [1, 2], "get_exam_d": [1, 2], "get_file_list": [1, 2], "get_label_encod": [1, 2], "has_im": [1, 2], "in_val_rang": [1, 2], "loc_val": [1, 2], "out_datafram": [1, 2], "parse_d": [1, 2], "stack_list_by_label": [1, 2], "y_dim": [1, 2], "c_dim": [1, 2], "batch_siz": [1, 2], "augment": [1, 2], "dtype": [1, 2], "pandas_cach": [1, 2], "cach": [1, 2], "batch_by_pid": [1, 2], "file_record_nam": [1, 2], "channels_first": [1, 2], "save_ram": [1, 2], "static_input": [1, 2], "match_confound": [1, 2], "all_record": [1, 2], "build_pandas_databas": [1, 2], "load_image_stack": [1, 2], "name": [1, 2], "read_record": [1, 2], "rotate_label": [1, 2], "switch_stack": [1, 2], "tl": [1, 2], "key_to_filename_default": [1, 2], "allrecord": [1, 2], "add_record": [1, 2], "get_modality_acc": [1, 2], "get_modality_auc": [1, 2], "greatest_modality_differ": [1, 2], "merge_modality_pid": [1, 2], "plot": [1, 2], "filerecord": [1, 2], "get_acc": [1, 2], "get_divid": [1, 2], "get_filetypes_diff_d": [1, 2], "get_filetypes_name_mod": [1, 2], "get_filetypes_name_modality_num": [1, 2], "get_filetypes_name_num": [1, 2], "get_filetypes_name_num_mod": [1, 2], "print_record": [1, 2], "read_json": [1, 2], "test": [1, 2], "test_grad_cam": [1, 2], "pidrecord": [1, 2], "add_file_record": [1, 2], "get_mean_accuraci": [1, 2], "get_mean_mod": [1, 2], "get_modality_differ": [1, 2], "statsrecord": [1, 2], "get_nam": [1, 2], "output_auc": [1, 2], "updat": [1, 2], "lr": [1, 2], "loss_funct": [1, 2], "optim": [1, 2], "optimizer_reg": [1, 2], "loss_image_dir": [1, 2], "checkpoint_dir": [1, 2], "save_latest_freq": [1, 2], "verbos": [1, 2], "one_step": [1, 2], "loop": [1, 2], "image_dict": [1, 2], "mem_limit": [1, 2], "obj_siz": [1, 2], "cur_mem": [1, 2], "add": [1, 2], "check_mem": [1, 2], "clear_imag": [1, 2], "get": [1, 2], "get_mem": [1, 2], "ha": [1, 2], "batchrecord": [1, 2], "image_record": [1, 2], "gpu_id": [1, 2], "get_c": [1, 2], "get_c_dud": [1, 2], "get_x": [1, 2], "get_i": [1, 2], "get_static_input": [1, 2], "get_text_record": [1, 2], "filelookup": [1, 2], "file": [1, 2], "kei": [1, 2], "npy_fil": [1, 2], "imagerecord": [1, 2], "extra_info_list": [1, 2], "imag": [1, 2, 3], "y": [1, 2], "c": [1, 2], "y_on_c": [1, 2], "times_cal": [1, 2], "static_input_r": [1, 2], "cached_record": [1, 2], "exam_d": [1, 2], "bdate": [1, 2], "json_fil": [1, 2], "load": [1, 2], "get_image_typ": [1, 2], "read_imag": [1, 2], "patientrecord": [1, 2], "pid": [1, 2], "get_record": [1, 2], "load_extra_info": [1, 2], "textrecord": [1, 2], "classifi": [1, 2], "forward": [1, 2], "paramet": [1, 2], "train": [1, 2], "decod": [1, 2], "encod": [1, 2], "ensemblemodel": [1, 2], "multiinputmodul": [1, 2], "regressor": [1, 2], "n_dyn_input": [1, 2], "n_stat_input": [1, 2], "encode_ag": [1, 2], "devic": [1, 2], "weight": [1, 2], "latent_dim": [1, 2], "variat": [1, 2], "remove_uncertain": [1, 2], "use_attn": [1, 2], "num_training_sampl": [1, 2], "static_record": [1, 2], "classifier_freez": [1, 2], "classifier_paramet": [1, 2], "cpu": [1, 2], "cuda": [1, 2], "forward_ensembl": [1, 2], "load_state_dict": [1, 2], "regressor_freez": [1, 2], "state_dict": [1, 2], "reshap": [1, 2], "get_age_arr": [1, 2], "get_age_encod": [1, 2], "time_index": [1, 2], "yc_conv": [1, 2], "bucket": [1, 2], "check_key_to_filenam": [1, 2], "class_bal": [1, 2], "compile_dicom": [1, 2], "compile_dicom_fold": [1, 2], "compile_dicom_pi": [1, 2], "date_sort": [1, 2], "determine_random_partit": [1, 2], "determine_random_partition2": [1, 2], "diagnose_network": [1, 2], "discretize_valu": [1, 2], "download_file_from_google_dr": [1, 2], "download_weight": [1, 2], "encode_static_input": [1, 2], "equal_term": [1, 2], "get_balanced_filename_list": [1, 2], "get_class_select": [1, 2], "get_confirm_token": [1, 2], "get_data_from_filenam": [1, 2], "get_dim_str": [1, 2], "get_file_list_from_list": [1, 2], "get_file_list_from_str": [1, 2], "get_first_n_prim": [1, 2], "get_lr": [1, 2], "get_multilabel_acc": [1, 2], "get_none_arrai": [1, 2], "get_prime_form": [1, 2], "hidden_batch_predict": [1, 2], "integrate_arr": [1, 2], "integrate_arrs_non": [1, 2], "is_dicom": [1, 2], "is_float": [1, 2], "is_image_fil": [1, 2], "is_list_str": [1, 2], "is_nan": [1, 2], "label_to_commun": [1, 2], "list_to_str": [1, 2], "mod_mea": [1, 2], "multi_mannwhitneyu": [1, 2], "nifti_to_np": [1, 2], "not_temp": [1, 2], "output_test": [1, 2], "parsed": [1, 2], "prime": [1, 2], "print_numpi": [1, 2], "recompute_selection_ratio": [1, 2], "resize_np": [1, 2], "save_imag": [1, 2], "save_response_cont": [1, 2], "separate_set": [1, 2], "str_to_list": [1, 2], "tensor2im": [1, 2], "test_al": [1, 2], "text_to_bin": [1, 2], "validate_databas": [1, 2], "content": 1, "class": 2, "none": 2, "function": 2, "base": 2, "object": 2, "wrapper": 2, "panda": 2, "tabl": 2, "some": 2, "common": 2, "repeat": 2, "store": 2, "datafram": 2, "contain": 2, "metadata": 2, "about": 2, "being": 2, "read": 2, "It": 2, "also": 2, "build": 2, "up": 2, "thi": 2, "real": 2, "time": 2, "onli": 2, "dicom": 2, "nifti": 2, "json": 2, "ar": 2, "present": 2, "One": 2, "purpos": 2, "i": 2, "translat": 2, "token": 2, "valu": 2, "one": 2, "hot": 2, "vector": 2, "can": 2, "dl": 2, "fastest": 2, "wai": 2, "possibl": 2, "anoth": 2, "storag": 2, "particular": 2, "size": 2, "The": 2, "intern": 2, "default": 2, "type": 2, "pickl": 2, "str": 2, "current": 2, "list": 2, "return": 2, "see": 2, "dict": 2, "dimens": 2, "tupl": 2, "back": 2, "callback": 2, "dictionari": 2, "from": 2, "accumul": 2, "period": 2, "merg": 2, "": 2, "us": [2, 3], "an": 2, "intermediari": 2, "prevent": 2, "too": 2, "much": 2, "fragment": 2, "quick": 2, "refer": 2, "set": 2, "nifti_fil": 2, "which": 2, "later": 2, "compil": 2, "nii": 2, "gz": 2, "wa": 2, "output": 2, "preprocess": 2, "softwar": 2, "If": 2, "same": 2, "directori": 2, "input": 2, "lookup": 2, "convert": 2, "continu": 2, "variabl": 2, "ml": [2, 3], "patient": 2, "id": 2, "attempt": 2, "guess": 2, "patientid": 2, "numpi": 2, "question": 2, "date": 2, "integ": 2, "repres": 2, "given": 2, "A": 2, "indic": 2, "nth": 2, "datapoint": 2, "cnum_list": 2, "im": 2, "bool": 2, "determin": 2, "whether": 2, "fkei": 2, "valid": 2, "rang": 2, "fkey_ass": 2, "d": 2, "date_format": 2, "m": 2, "h": 2, "pars": 2, "string": 2, "filename_list": 2, "reorgan": 2, "so": 2, "men": 2, "women": 2, "sex": 2, "two": 2, "must": 2, "separ": 2, "filename_list_stack": 2, "image_fold": 2, "true": 2, "14": 2, "96": 2, "torch": 2, "1": 2, "32": 2, "16": 2, "return_obj": 2, "fals": 2, "medic": 2, "format": 2, "mai": 2, "loader": 2, "batch": 2, "addition": 2, "appli": 2, "data": 2, "match": 2, "algorithm": 2, "ensur": 2, "overli": 2, "fed": 2, "dure": 2, "capabl": 2, "maintain": 2, "differ": 2, "balanc": 2, "both": 2, "access": 2, "automat": 2, "folder": 2, "directli": 2, "alreadi": 2, "been": 2, "built": 2, "three": 2, "resiz": 2, "upon": 2, "first": [2, 3], "number": 2, "associ": 2, "second": 2, "choic": 2, "extra": 2, "affect": 2, "fewer": 2, "throw": 2, "error": 2, "thu": 2, "2": 2, "crash": 2, "But": 2, "4": 2, "just": 2, "result": 2, "alwai": 2, "zero": 2, "should": 2, "effect": 2, "oper": 2, "except": 2, "higher": 2, "max": 2, "per": 2, "note": 2, "maximum": 2, "best": 2, "int": 2, "work": 2, "e": 2, "otherwis": 2, "when": 2, "call": 2, "either": 2, "smaller": 2, "than": 2, "npy": 2, "faster": 2, "full": 2, "filepath": 2, "need": 2, "accept": 2, "addit": 2, "revers": 2, "well": 2, "togeth": 2, "path": 2, "were": 2, "examin": 2, "put": 2, "channel": 2, "last": 2, "clear": 2, "garbag": 2, "collect": 2, "frequent": 2, "save": 2, "ram": 2, "veri": 2, "larg": 2, "dataset": 2, "static": 2, "text": 2, "like": 2, "ethnic": 2, "you": 2, "want": 2, "studi": 2, "male": 2, "could": 2, "sexdsc": 2, "peopl": 2, "between": 2, "ag": 2, "30": 2, "60": 2, "combin": 2, "distinguish": 2, "ad": 2, "control": 2, "would": 2, "sever": 2, "limit": 2, "even": 2, "noth": 2, "mutual": 2, "exclus": 2, "them": 2, "main": 2, "memori": 2, "high": 2, "multi_med_image_load": 2, "entir": 2, "filesystem": 2, "go": 2, "take": 2, "while": 2, "stack": 2, "queue": 2, "flist": 2, "zero_list_addendum": 2, "top": 2, "x_file": 2, "y_pred": 2, "modal": 2, "age_encod": 2, "mv_limit": 2, "0": 2, "5": 2, "min_pid": 2, "val": 2, "divid": 2, "indent": 2, "out_record_fold": 2, "pr": 2, "test_nam": 2, "c_pred": 2, "1e": 2, "05": 2, "beta": 2, "999": 2, "mseloss": 2, "64": 2, "regress": 2, "experiment_nam": 2, "100": 2, "requir": 2, "adversari": 2, "techniqu": 2, "variou": 2, "bit": 2, "complic": 2, "method": 2, "abstract": 2, "all": 2, "learn": 2, "rate": 2, "float": 2, "pytorch": 2, "loss": 2, "mse": 2, "instead": 2, "entropi": 2, "becaus": 2, "smoother": 2, "tend": 2, "better": 2, "further": 2, "nn": 2, "checkpoint": 2, "graph": 2, "adam": 2, "incentiv": 2, "detect": 2, "each": 2, "individu": 2, "over": 2, "state": 2, "iter": 2, "befor": 2, "due": 2, "option": 2, "natur": 2, "cannot": 2, "dataload": 2, "pass": 2, "through": 2, "how": 2, "backpropag": 2, "after": 2, "have": 2, "print": 2, "boolean": 2, "count": 2, "trainer": 2, "gone": 2, "singl": 2, "switch": 2, "param": 2, "duplic": 2, "abl": 2, "perform": 2, "necessari": 2, "map": 2, "averag": 2, "todo": 2, "sort": 2, "essenti": 2, "instanc": 2, "multipl": 2, "gpu": 2, "ani": 2, "out": 2, "npy_nam": 2, "y_num": 2, "c_num": 2, "arg": 2, "keep": 2, "organ": 2, "system": 2, "without": 2, "creat": 2, "avoid": 2, "space": 2, "quickli": 2, "look": 2, "standard": 2, "actual": 2, "dim": 2, "arrai": 2, "replic": 2, "bottom": 2, "enough": 2, "accommod": 2, "counter": 2, "g": 2, "onc": 2, "thei": 2, "re": 2, "22": 2, "recommend": 2, "taken": 2, "datetim": 2, "birth": 2, "dud": 2, "dimension": 2, "row": 2, "self": 2, "estim": 2, "larger": 2, "item": 2, "histori": 2, "n_input": 2, "base_feat": 2, "n_out": 2, "n_label": 2, "x": 2, "defin": 2, "comput": 2, "everi": 2, "overridden": 2, "subclass": 2, "although": 2, "recip": 2, "within": 2, "afterward": 2, "sinc": 2, "former": 2, "care": 2, "run": 2, "regist": 2, "hook": 2, "latter": 2, "silent": 2, "ignor": 2, "typic": 2, "recurs": 2, "yield": 2, "direct": 2, "member": 2, "exampl": 2, "xdoctest": 2, "skip": 2, "undefin": 2, "var": 2, "tensor": 2, "20l": 2, "1l": 2, "5l": 2, "512": 2, "model_list": 2, "hidden": 2, "zero_input": 2, "128": 2, "non": 2, "predict": 2, "latent": 2, "network": 2, "represent": 2, "prior": 2, "pretrain": 2, "download": 2, "place": 2, "unpredict": 2, "turn": 2, "setup": 2, "la": 2, "autoencod": 2, "sampl": 2, "gaussian": 2, "distribut": 2, "rather": 2, "unimpl": 2, "untest": 2, "experiment": 2, "subroutin": 2, "design": 2, "remov": 2, "consider": 2, "certain": 2, "distanc": 2, "attent": 2, "mechan": 2, "uncertainti": 2, "300": 2, "unrecogn": 2, "move": 2, "buffer": 2, "modifi": 2, "make": 2, "construct": 2, "live": 2, "specifi": 2, "copi": 2, "return_regress": 2, "return_encod": 2, "encoded_input": 2, "birthdat": 2, "straight": 2, "kwarg": 2, "n_en": 2, "10": 2, "its": 2, "descend": 2, "strict": 2, "exactli": 2, "persist": 2, "strictli": 2, "enforc": 2, "missing_kei": 2, "miss": 2, "unexpected_kei": 2, "unexpect": 2, "namedtupl": 2, "field": 2, "correspond": 2, "exist": 2, "rais": 2, "runtimeerror": 2, "whole": 2, "includ": 2, "shallow": 2, "posit": 2, "argument": 2, "destin": 2, "prefix": 2, "keep_var": 2, "order": 2, "howev": 2, "deprec": 2, "keyword": 2, "futur": 2, "releas": 2, "pleas": 2, "end": 2, "user": 2, "provid": 2, "ordereddict": 2, "compos": 2, "detach": 2, "autograd": 2, "bia": 2, "n_confound": 2, "n_choic": 2, "target_shap": 2, "sequenti": 2, "pipelin": 2, "fly": 2, "max_ag": 2, "120": 2, "po": 2, "10000": 2, "y_weight": 2, "arr": 2, "n_bucket": 2, "callabl": 2, "verifi": 2, "convers": 2, "properli": 2, "implement": 2, "backward": 2, "plim": 2, "exclude_non": 2, "unique_class": 2, "dicom_fold": 2, "db_builder": 2, "reli": 2, "dcm2niix": 2, "datebasewrapp": 2, "had": 2, "overal": 2, "though": 2, "command": 2, "pydicom": 2, "backup": 2, "interest": 2, "ext": 2, "arr2d": 2, "net": 2, "calcul": 2, "mean": 2, "absolut": 2, "gradient": 2, "v": 2, "file_id": 2, "googl": 2, "drive": 2, "url": 2, "term": 2, "test_vari": 2, "confounds_arrai": 2, "selection_ratio": 2, "66": 2, "selection_limit": 2, "inf": 2, "value_rang": 2, "output_selection_savepath": 2, "test_value_rang": 2, "get_all_test_set": 2, "total_size_limit": 2, "non_confound_value_rang": 2, "patient_id_kei": 2, "respons": 2, "return_as_str": 2, "unique_test_v": 2, "return_choice_arr": 2, "dict_obj": 2, "return_as_dict": 2, "x_encod": 2, "vae_encod": 2, "uniqu": 2, "density_confound_sort": 2, "3": 2, "outtyp": 2, "myfil": 2, "48": 2, "version": 2, "myfile_resized_96_48_48": 2, "perfect": 2, "cube": 2, "annot": 2, "itself": 2, "resized_96_48_48": 2, "obj": 2, "allow_list_of_list": 2, "tree": 2, "applic": 2, "o": 2, "walk": 2, "do": 2, "allow": 2, "n": 2, "sorted_confound": 2, "group_var": 2, "last_icd": 2, "last_hidden_var": 2, "ensembl": 2, "s1": 2, "s2": 2, "exclud": 2, "temporari": 2, "k": 2, "inc_null_str": 2, "replac": 2, "more": 2, "elabor": 2, "locat": 2, "By": 2, "nifti_filepath": 2, "test_val_rang": 2, "output_result": 2, "test_predictions_fil": 2, "mucran": 2, "return_xfil": 2, "shp": 2, "min": 2, "median": 2, "std": 2, "nifti_data": 2, "image_numpi": 2, "image_path": 2, "aspect_ratio": 2, "disk": 2, "select": 2, "set_divis": 2, "nospac": 2, "input_imag": 2, "imtyp": 2, "uint8": 2, "n_bin": 2, "binari": 2, "To": 3, "mimim": 3, "pip": 3, "multi": 3, "med": 3}, "objects": {"": [[2, 0, 0, "-", "multi_med_image_ml"]], "multi_med_image_ml": [[2, 0, 0, "-", "DataBaseWrapper"], [2, 0, 0, "-", "MedImageLoader"], [2, 0, 0, "-", "MultiInputTester"], [2, 0, 0, "-", "MultiInputTrainer"], [2, 0, 0, "-", "Records"], [2, 0, 0, "-", "models"], [2, 0, 0, "-", "utils"]], "multi_med_image_ml.DataBaseWrapper": [[2, 1, 1, "", "DataBaseWrapper"]], "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper": [[2, 2, 1, "", "X_dim"], [2, 3, 1, "", "add_json"], [2, 3, 1, "", "build_metadata"], [2, 2, 1, "", "columns"], [2, 2, 1, "", "confounds"], [2, 2, 1, "", "database"], [2, 2, 1, "", "filename"], [2, 3, 1, "", "get_ID"], [2, 3, 1, "", "get_birth_date"], [2, 3, 1, "", "get_confound_encode"], [2, 3, 1, "", "get_exam_date"], [2, 3, 1, "", "get_file_list"], [2, 3, 1, "", "get_label_encode"], [2, 3, 1, "", "has_im"], [2, 3, 1, "", "in_val_ranges"], [2, 2, 1, "", "jdict"], [2, 2, 1, "", "key_to_filename"], [2, 2, 1, "", "labels"], [2, 3, 1, "", "loc_val"], [2, 3, 1, "", "out_dataframe"], [2, 3, 1, "", "parse_date"], [2, 3, 1, "", "stack_list_by_label"], [2, 2, 1, "", "val_ranges"]], "multi_med_image_ml.MedImageLoader": [[2, 1, 1, "", "MedImageLoader"], [2, 4, 1, "", "key_to_filename_default"]], "multi_med_image_ml.MedImageLoader.MedImageLoader": [[2, 2, 1, "", "C_dim"], [2, 2, 1, "", "X_dim"], [2, 2, 1, "", "Y_dim"], [2, 2, 1, "", "all_records"], [2, 2, 1, "", "augment"], [2, 2, 1, "", "batch_by_pid"], [2, 2, 1, "", "batch_size"], [2, 3, 1, "", "build_pandas_database"], [2, 2, 1, "", "cache"], [2, 2, 1, "", "channels_first"], [2, 2, 1, "", "confounds"], [2, 2, 1, "", "database"], [2, 2, 1, "", "dtype"], [2, 2, 1, "", "file_record_name"], [2, 3, 1, "", "get_file_list"], [2, 2, 1, "", "key_to_filename"], [2, 2, 1, "", "label"], [2, 3, 1, "", "load_image_stack"], [2, 2, 1, "", "match_confounds"], [2, 3, 1, "", "name"], [2, 2, 1, "", "pandas_cache"], [2, 3, 1, "", "read_record"], [2, 3, 1, "", "record"], [2, 3, 1, "", "rotate_labels"], [2, 2, 1, "", "save_ram"], [2, 2, 1, "", "static_inputs"], [2, 3, 1, "", "switch_stack"], [2, 3, 1, "", "tl"], [2, 2, 1, "", "val_ranges"]], "multi_med_image_ml.MultiInputTester": [[2, 1, 1, "", "AllRecords"], [2, 1, 1, "", "FileRecord"], [2, 1, 1, "", "MultiInputTester"], [2, 1, 1, "", "PIDRecord"], [2, 1, 1, "", "StatsRecord"]], "multi_med_image_ml.MultiInputTester.AllRecords": [[2, 3, 1, "", "add_record"], [2, 3, 1, "", "get_modality_acc"], [2, 3, 1, "", "get_modality_auc"], [2, 3, 1, "", "greatest_modality_difference"], [2, 3, 1, "", "merge_modality_pids"], [2, 3, 1, "", "plot"]], "multi_med_image_ml.MultiInputTester.FileRecord": [[2, 3, 1, "", "get_acc"], [2, 3, 1, "", "get_divides"], [2, 3, 1, "", "get_filetypes_diff_date"], [2, 3, 1, "", "get_filetypes_name_modality"], [2, 3, 1, "", "get_filetypes_name_modality_num"], [2, 3, 1, "", "get_filetypes_name_num"], [2, 3, 1, "", "get_filetypes_name_num_modality"], [2, 3, 1, "", "print_record"]], "multi_med_image_ml.MultiInputTester.MultiInputTester": [[2, 3, 1, "", "read_json"], [2, 3, 1, "", "test"], [2, 3, 1, "", "test_grad_cam"]], "multi_med_image_ml.MultiInputTester.PIDRecord": [[2, 3, 1, "", "add_file_record"], [2, 3, 1, "", "get_mean_accuracy"], [2, 3, 1, "", "get_mean_modality"], [2, 3, 1, "", "get_modality_difference"], [2, 3, 1, "", "print_record"]], "multi_med_image_ml.MultiInputTester.StatsRecord": [[2, 3, 1, "", "get_name"], [2, 3, 1, "", "output_auc"], [2, 3, 1, "", "record"], [2, 3, 1, "", "update"]], "multi_med_image_ml.MultiInputTrainer": [[2, 1, 1, "", "MultiInputTrainer"]], "multi_med_image_ml.MultiInputTrainer.MultiInputTrainer": [[2, 2, 1, "", "batch_size"], [2, 2, 1, "", "checkpoint_dir"], [2, 2, 1, "", "index"], [2, 3, 1, "", "loop"], [2, 2, 1, "", "loss_function"], [2, 2, 1, "", "loss_image_dir"], [2, 2, 1, "", "lr"], [2, 2, 1, "", "model"], [2, 2, 1, "", "name"], [2, 2, 1, "", "one_step"], [2, 2, 1, "", "optimizer"], [2, 2, 1, "", "optimizer_reg"], [2, 2, 1, "", "save_latest_freq"], [2, 3, 1, "", "test"], [2, 2, 1, "", "verbose"]], "multi_med_image_ml.Records": [[2, 1, 1, "", "AllRecords"], [2, 1, 1, "", "BatchRecord"], [2, 1, 1, "", "FileLookup"], [2, 1, 1, "", "ImageRecord"], [2, 1, 1, "", "PatientRecord"], [2, 1, 1, "", "Record"], [2, 4, 1, "", "TextRecord"]], "multi_med_image_ml.Records.AllRecords": [[2, 3, 1, "", "add"], [2, 3, 1, "", "check_mem"], [2, 3, 1, "", "clear_images"], [2, 2, 1, "", "cur_mem"], [2, 3, 1, "", "get"], [2, 3, 1, "", "get_mem"], [2, 3, 1, "", "has"], [2, 2, 1, "", "image_dict"], [2, 2, 1, "", "mem_limit"], [2, 2, 1, "", "obj_size"]], "multi_med_image_ml.Records.BatchRecord": [[2, 2, 1, "", "batch_size"], [2, 2, 1, "", "channels_first"], [2, 2, 1, "", "dtype"], [2, 3, 1, "", "get_C"], [2, 3, 1, "", "get_C_dud"], [2, 3, 1, "", "get_X"], [2, 3, 1, "", "get_Y"], [2, 3, 1, "", "get_birth_dates"], [2, 3, 1, "", "get_exam_dates"], [2, 3, 1, "", "get_static_inputs"], [2, 3, 1, "", "get_text_records"], [2, 2, 1, "", "gpu_ids"], [2, 2, 1, "", "image_records"], [2, 3, 1, "", "name"]], "multi_med_image_ml.Records.FileLookup": [[2, 3, 1, "", "file"], [2, 3, 1, "", "key"], [2, 3, 1, "", "npy_file"]], "multi_med_image_ml.Records.ImageRecord": [[2, 2, 1, "", "C"], [2, 2, 1, "", "C_dim"], [2, 2, 1, "", "X_dim"], [2, 2, 1, "", "Y"], [2, 2, 1, "", "Y_dim"], [2, 2, 1, "", "bdate"], [2, 2, 1, "", "cache"], [2, 2, 1, "", "cached_record"], [2, 3, 1, "", "clear_image"], [2, 2, 1, "", "database"], [2, 2, 1, "", "dtype"], [2, 2, 1, "", "exam_date"], [2, 2, 1, "", "extra_info_list"], [2, 2, 1, "", "filename"], [2, 3, 1, "", "get_C"], [2, 3, 1, "", "get_C_dud"], [2, 3, 1, "", "get_X"], [2, 3, 1, "", "get_Y"], [2, 3, 1, "", "get_image_type"], [2, 3, 1, "", "get_mem"], [2, 2, 1, "", "image"], [2, 2, 1, "", "json_file"], [2, 2, 1, "", "loaded"], [2, 2, 1, "", "npy_file"], [2, 3, 1, "", "read_image"], [2, 2, 1, "", "static_input_res"], [2, 2, 1, "", "static_inputs"], [2, 2, 1, "", "times_called"], [2, 2, 1, "", "y_on_c"]], "multi_med_image_ml.Records.PatientRecord": [[2, 3, 1, "", "get_record"], [2, 3, 1, "", "get_records"], [2, 2, 1, "", "pid"]], "multi_med_image_ml.Records.Record": [[2, 3, 1, "", "get_birth_date"], [2, 3, 1, "", "get_exam_date"], [2, 3, 1, "", "get_static_inputs"], [2, 3, 1, "", "load_extra_info"]], "multi_med_image_ml.models": [[2, 1, 1, "", "Classifier"], [2, 1, 1, "", "Decoder"], [2, 1, 1, "", "Encoder"], [2, 1, 1, "", "EnsembleModel"], [2, 1, 1, "", "MultiInputModule"], [2, 1, 1, "", "Regressor"], [2, 1, 1, "", "Reshape"], [2, 4, 1, "", "get_age_arr"], [2, 4, 1, "", "get_age_encoding"], [2, 4, 1, "", "time_index"]], "multi_med_image_ml.models.Classifier": [[2, 3, 1, "", "forward"], [2, 3, 1, "", "parameters"], [2, 2, 1, "", "training"]], "multi_med_image_ml.models.Decoder": [[2, 3, 1, "", "forward"], [2, 2, 1, "", "training"]], "multi_med_image_ml.models.Encoder": [[2, 3, 1, "", "forward"], [2, 3, 1, "", "parameters"], [2, 2, 1, "", "training"]], "multi_med_image_ml.models.EnsembleModel": [[2, 3, 1, "", "forward"], [2, 2, 1, "", "training"]], "multi_med_image_ml.models.MultiInputModule": [[2, 2, 1, "", "C_dim"], [2, 2, 1, "", "Y_dim"], [2, 2, 1, "", "classifier"], [2, 3, 1, "", "classifier_freeze"], [2, 3, 1, "", "classifier_parameters"], [2, 3, 1, "", "cpu"], [2, 3, 1, "", "cuda"], [2, 2, 1, "", "device"], [2, 2, 1, "", "encode_age"], [2, 2, 1, "", "encoder"], [2, 3, 1, "", "forward"], [2, 3, 1, "", "forward_ensemble"], [2, 2, 1, "", "latent_dim"], [2, 3, 1, "", "load_state_dict"], [2, 2, 1, "", "n_dyn_inputs"], [2, 2, 1, "", "n_stat_inputs"], [2, 2, 1, "", "num_training_samples"], [2, 2, 1, "", "regressor"], [2, 3, 1, "", "regressor_freeze"], [2, 2, 1, "", "remove_uncertain"], [2, 3, 1, "", "state_dict"], [2, 2, 1, "", "static_record"], [2, 2, 1, "", "training"], [2, 2, 1, "", "use_attn"], [2, 2, 1, "", "variational"], [2, 2, 1, "", "weights"]], "multi_med_image_ml.models.Regressor": [[2, 3, 1, "", "cpu"], [2, 3, 1, "", "cuda"], [2, 3, 1, "", "forward"], [2, 3, 1, "", "load_state_dict"], [2, 3, 1, "", "parameters"], [2, 3, 1, "", "state_dict"], [2, 2, 1, "", "training"]], "multi_med_image_ml.models.Reshape": [[2, 3, 1, "", "forward"], [2, 2, 1, "", "training"]], "multi_med_image_ml.utils": [[2, 4, 1, "", "YC_conv"], [2, 4, 1, "", "bucketize"], [2, 4, 1, "", "check_key_to_filename"], [2, 4, 1, "", "class_balance"], [2, 4, 1, "", "compile_dicom"], [2, 4, 1, "", "compile_dicom_folder"], [2, 4, 1, "", "compile_dicom_py"], [2, 4, 1, "", "date_sorter"], [2, 4, 1, "", "determine_random_partition"], [2, 4, 1, "", "determine_random_partition2"], [2, 4, 1, "", "diagnose_network"], [2, 4, 1, "", "discretize_value"], [2, 4, 1, "", "download_file_from_google_drive"], [2, 4, 1, "", "download_weights"], [2, 4, 1, "", "encode_static_inputs"], [2, 4, 1, "", "equal_terms"], [2, 4, 1, "", "get_balanced_filename_list"], [2, 4, 1, "", "get_class_selection"], [2, 4, 1, "", "get_confirm_token"], [2, 4, 1, "", "get_data_from_filenames"], [2, 4, 1, "", "get_dim_str"], [2, 4, 1, "", "get_file_list"], [2, 4, 1, "", "get_file_list_from_list"], [2, 4, 1, "", "get_file_list_from_str"], [2, 4, 1, "", "get_first_n_primes"], [2, 4, 1, "", "get_lr"], [2, 4, 1, "", "get_multilabel_acc"], [2, 4, 1, "", "get_none_array"], [2, 4, 1, "", "get_prime_form"], [2, 4, 1, "", "hidden_batch_predictions"], [2, 4, 1, "", "integrate_arrs"], [2, 4, 1, "", "integrate_arrs_none"], [2, 4, 1, "", "is_dicom"], [2, 4, 1, "", "is_float"], [2, 4, 1, "", "is_image_file"], [2, 4, 1, "", "is_list_str"], [2, 4, 1, "", "is_nan"], [2, 4, 1, "", "key_to_filename_default"], [2, 4, 1, "", "label_to_community"], [2, 4, 1, "", "list_to_str"], [2, 4, 1, "", "mod_meas"], [2, 4, 1, "", "multi_mannwhitneyu"], [2, 4, 1, "", "nifti_to_np"], [2, 4, 1, "", "not_temp"], [2, 4, 1, "", "output_test"], [2, 4, 1, "", "parsedate"], [2, 4, 1, "", "prime"], [2, 4, 1, "", "print_numpy"], [2, 4, 1, "", "recompute_selection_ratios"], [2, 4, 1, "", "resize_np"], [2, 4, 1, "", "save_image"], [2, 4, 1, "", "save_response_content"], [2, 4, 1, "", "separate_set"], [2, 4, 1, "", "str_to_list"], [2, 4, 1, "", "tensor2im"], [2, 4, 1, "", "test_all"], [2, 4, 1, "", "text_to_bin"], [2, 4, 1, "", "validate_database"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "multi": 0, "input": 0, "medic": 0, "imag": 0, "ml": 0, "toolkit": 0, "": 0, "document": 0, "indic": 0, "tabl": 0, "content": [0, 2], "multi_med_image_ml": [1, 2], "packag": 2, "submodul": 2, "databasewrapp": 2, "modul": 2, "medimageload": 2, "multiinputtest": 2, "multiinputtrain": 2, "record": 2, "model": 2, "util": 2, "usag": 3, "instal": 3}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 58}, "alltitles": {"Welcome to Multi-Input Medical Image ML Toolkit\u2019s documentation!": [[0, "welcome-to-multi-input-medical-image-ml-toolkit-s-documentation"]], "Indices and tables": [[0, "indices-and-tables"]], "Contents": [[0, "contents"]], "multi_med_image_ml": [[1, "multi-med-image-ml"]], "multi_med_image_ml package": [[2, "multi-med-image-ml-package"]], "Submodules": [[2, "submodules"]], "multi_med_image_ml.DataBaseWrapper module": [[2, "module-multi_med_image_ml.DataBaseWrapper"]], "multi_med_image_ml.MedImageLoader module": [[2, "module-multi_med_image_ml.MedImageLoader"]], "multi_med_image_ml.MultiInputTester module": [[2, "module-multi_med_image_ml.MultiInputTester"]], "multi_med_image_ml.MultiInputTrainer module": [[2, "module-multi_med_image_ml.MultiInputTrainer"]], "multi_med_image_ml.Records module": [[2, "module-multi_med_image_ml.Records"]], "multi_med_image_ml.models module": [[2, "module-multi_med_image_ml.models"]], "multi_med_image_ml.utils module": [[2, "module-multi_med_image_ml.utils"]], "Module contents": [[2, "module-multi_med_image_ml"]], "Usage": [[3, "usage"]], "Installation": [[3, "installation"]]}, "indexentries": {"allrecords (class in multi_med_image_ml.multiinputtester)": [[2, "multi_med_image_ml.MultiInputTester.AllRecords"]], "allrecords (class in multi_med_image_ml.records)": [[2, "multi_med_image_ml.Records.AllRecords"]], "batchrecord (class in multi_med_image_ml.records)": [[2, "multi_med_image_ml.Records.BatchRecord"]], "c (multi_med_image_ml.records.imagerecord attribute)": [[2, "multi_med_image_ml.Records.ImageRecord.C"]], "c_dim (multi_med_image_ml.medimageloader.medimageloader attribute)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.C_dim"]], "c_dim (multi_med_image_ml.records.imagerecord attribute)": [[2, "multi_med_image_ml.Records.ImageRecord.C_dim"]], "c_dim (multi_med_image_ml.models.multiinputmodule attribute)": [[2, "multi_med_image_ml.models.MultiInputModule.C_dim"]], "classifier (class in multi_med_image_ml.models)": [[2, "multi_med_image_ml.models.Classifier"]], "databasewrapper (class in multi_med_image_ml.databasewrapper)": [[2, "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper"]], "decoder (class in multi_med_image_ml.models)": [[2, "multi_med_image_ml.models.Decoder"]], "encoder (class in multi_med_image_ml.models)": [[2, "multi_med_image_ml.models.Encoder"]], "ensemblemodel (class in multi_med_image_ml.models)": [[2, "multi_med_image_ml.models.EnsembleModel"]], "filelookup (class in multi_med_image_ml.records)": [[2, "multi_med_image_ml.Records.FileLookup"]], "filerecord (class in multi_med_image_ml.multiinputtester)": [[2, "multi_med_image_ml.MultiInputTester.FileRecord"]], "imagerecord (class in multi_med_image_ml.records)": [[2, "multi_med_image_ml.Records.ImageRecord"]], "medimageloader (class in multi_med_image_ml.medimageloader)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader"]], "multiinputmodule (class in multi_med_image_ml.models)": [[2, "multi_med_image_ml.models.MultiInputModule"]], "multiinputtester (class in multi_med_image_ml.multiinputtester)": [[2, "multi_med_image_ml.MultiInputTester.MultiInputTester"]], "multiinputtrainer (class in multi_med_image_ml.multiinputtrainer)": [[2, "multi_med_image_ml.MultiInputTrainer.MultiInputTrainer"]], "pidrecord (class in multi_med_image_ml.multiinputtester)": [[2, "multi_med_image_ml.MultiInputTester.PIDRecord"]], "patientrecord (class in multi_med_image_ml.records)": [[2, "multi_med_image_ml.Records.PatientRecord"]], "record (class in multi_med_image_ml.records)": [[2, "multi_med_image_ml.Records.Record"]], "regressor (class in multi_med_image_ml.models)": [[2, "multi_med_image_ml.models.Regressor"]], "reshape (class in multi_med_image_ml.models)": [[2, "multi_med_image_ml.models.Reshape"]], "statsrecord (class in multi_med_image_ml.multiinputtester)": [[2, "multi_med_image_ml.MultiInputTester.StatsRecord"]], "textrecord() (in module multi_med_image_ml.records)": [[2, "multi_med_image_ml.Records.TextRecord"]], "x_dim (multi_med_image_ml.databasewrapper.databasewrapper attribute)": [[2, "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper.X_dim"]], "x_dim (multi_med_image_ml.medimageloader.medimageloader attribute)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.X_dim"]], "x_dim (multi_med_image_ml.records.imagerecord attribute)": [[2, "multi_med_image_ml.Records.ImageRecord.X_dim"]], "y (multi_med_image_ml.records.imagerecord attribute)": [[2, "multi_med_image_ml.Records.ImageRecord.Y"]], "yc_conv() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.YC_conv"]], "y_dim (multi_med_image_ml.medimageloader.medimageloader attribute)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.Y_dim"]], "y_dim (multi_med_image_ml.records.imagerecord attribute)": [[2, "multi_med_image_ml.Records.ImageRecord.Y_dim"]], "y_dim (multi_med_image_ml.models.multiinputmodule attribute)": [[2, "multi_med_image_ml.models.MultiInputModule.Y_dim"]], "add() (multi_med_image_ml.records.allrecords method)": [[2, "multi_med_image_ml.Records.AllRecords.add"]], "add_file_record() (multi_med_image_ml.multiinputtester.pidrecord method)": [[2, "multi_med_image_ml.MultiInputTester.PIDRecord.add_file_record"]], "add_json() (multi_med_image_ml.databasewrapper.databasewrapper method)": [[2, "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper.add_json"]], "add_record() (multi_med_image_ml.multiinputtester.allrecords method)": [[2, "multi_med_image_ml.MultiInputTester.AllRecords.add_record"]], "all_records (multi_med_image_ml.medimageloader.medimageloader attribute)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.all_records"]], "augment (multi_med_image_ml.medimageloader.medimageloader attribute)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.augment"]], "batch_by_pid (multi_med_image_ml.medimageloader.medimageloader attribute)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.batch_by_pid"]], "batch_size (multi_med_image_ml.medimageloader.medimageloader attribute)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.batch_size"]], "batch_size (multi_med_image_ml.multiinputtrainer.multiinputtrainer attribute)": [[2, "multi_med_image_ml.MultiInputTrainer.MultiInputTrainer.batch_size"]], "batch_size (multi_med_image_ml.records.batchrecord attribute)": [[2, "multi_med_image_ml.Records.BatchRecord.batch_size"]], "bdate (multi_med_image_ml.records.imagerecord attribute)": [[2, "multi_med_image_ml.Records.ImageRecord.bdate"]], "bucketize() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.bucketize"]], "build_metadata() (multi_med_image_ml.databasewrapper.databasewrapper method)": [[2, "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper.build_metadata"]], "build_pandas_database() (multi_med_image_ml.medimageloader.medimageloader method)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.build_pandas_database"]], "cache (multi_med_image_ml.medimageloader.medimageloader attribute)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.cache"]], "cache (multi_med_image_ml.records.imagerecord attribute)": [[2, "multi_med_image_ml.Records.ImageRecord.cache"]], "cached_record (multi_med_image_ml.records.imagerecord attribute)": [[2, "multi_med_image_ml.Records.ImageRecord.cached_record"]], "channels_first (multi_med_image_ml.medimageloader.medimageloader attribute)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.channels_first"]], "channels_first (multi_med_image_ml.records.batchrecord attribute)": [[2, "multi_med_image_ml.Records.BatchRecord.channels_first"]], "check_key_to_filename() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.check_key_to_filename"]], "check_mem() (multi_med_image_ml.records.allrecords method)": [[2, "multi_med_image_ml.Records.AllRecords.check_mem"]], "checkpoint_dir (multi_med_image_ml.multiinputtrainer.multiinputtrainer attribute)": [[2, "multi_med_image_ml.MultiInputTrainer.MultiInputTrainer.checkpoint_dir"]], "class_balance() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.class_balance"]], "classifier (multi_med_image_ml.models.multiinputmodule attribute)": [[2, "multi_med_image_ml.models.MultiInputModule.classifier"]], "classifier_freeze() (multi_med_image_ml.models.multiinputmodule method)": [[2, "multi_med_image_ml.models.MultiInputModule.classifier_freeze"]], "classifier_parameters() (multi_med_image_ml.models.multiinputmodule method)": [[2, "multi_med_image_ml.models.MultiInputModule.classifier_parameters"]], "clear_image() (multi_med_image_ml.records.imagerecord method)": [[2, "multi_med_image_ml.Records.ImageRecord.clear_image"]], "clear_images() (multi_med_image_ml.records.allrecords method)": [[2, "multi_med_image_ml.Records.AllRecords.clear_images"]], "columns (multi_med_image_ml.databasewrapper.databasewrapper attribute)": [[2, "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper.columns"]], "compile_dicom() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.compile_dicom"]], "compile_dicom_folder() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.compile_dicom_folder"]], "compile_dicom_py() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.compile_dicom_py"]], "confounds (multi_med_image_ml.databasewrapper.databasewrapper attribute)": [[2, "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper.confounds"]], "confounds (multi_med_image_ml.medimageloader.medimageloader attribute)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.confounds"]], "cpu() (multi_med_image_ml.models.multiinputmodule method)": [[2, "multi_med_image_ml.models.MultiInputModule.cpu"]], "cpu() (multi_med_image_ml.models.regressor method)": [[2, "multi_med_image_ml.models.Regressor.cpu"]], "cuda() (multi_med_image_ml.models.multiinputmodule method)": [[2, "multi_med_image_ml.models.MultiInputModule.cuda"]], "cuda() (multi_med_image_ml.models.regressor method)": [[2, "multi_med_image_ml.models.Regressor.cuda"]], "cur_mem (multi_med_image_ml.records.allrecords attribute)": [[2, "multi_med_image_ml.Records.AllRecords.cur_mem"]], "database (multi_med_image_ml.databasewrapper.databasewrapper attribute)": [[2, "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper.database"]], "database (multi_med_image_ml.medimageloader.medimageloader attribute)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.database"]], "database (multi_med_image_ml.records.imagerecord attribute)": [[2, "multi_med_image_ml.Records.ImageRecord.database"]], "date_sorter() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.date_sorter"]], "determine_random_partition() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.determine_random_partition"]], "determine_random_partition2() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.determine_random_partition2"]], "device (multi_med_image_ml.models.multiinputmodule attribute)": [[2, "multi_med_image_ml.models.MultiInputModule.device"]], "diagnose_network() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.diagnose_network"]], "discretize_value() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.discretize_value"]], "download_file_from_google_drive() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.download_file_from_google_drive"]], "download_weights() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.download_weights"]], "dtype (multi_med_image_ml.medimageloader.medimageloader attribute)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.dtype"]], "dtype (multi_med_image_ml.records.batchrecord attribute)": [[2, "multi_med_image_ml.Records.BatchRecord.dtype"]], "dtype (multi_med_image_ml.records.imagerecord attribute)": [[2, "multi_med_image_ml.Records.ImageRecord.dtype"]], "encode_age (multi_med_image_ml.models.multiinputmodule attribute)": [[2, "multi_med_image_ml.models.MultiInputModule.encode_age"]], "encode_static_inputs() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.encode_static_inputs"]], "encoder (multi_med_image_ml.models.multiinputmodule attribute)": [[2, "multi_med_image_ml.models.MultiInputModule.encoder"]], "equal_terms() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.equal_terms"]], "exam_date (multi_med_image_ml.records.imagerecord attribute)": [[2, "multi_med_image_ml.Records.ImageRecord.exam_date"]], "extra_info_list (multi_med_image_ml.records.imagerecord attribute)": [[2, "multi_med_image_ml.Records.ImageRecord.extra_info_list"]], "file() (multi_med_image_ml.records.filelookup method)": [[2, "multi_med_image_ml.Records.FileLookup.file"]], "file_record_name (multi_med_image_ml.medimageloader.medimageloader attribute)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.file_record_name"]], "filename (multi_med_image_ml.databasewrapper.databasewrapper attribute)": [[2, "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper.filename"]], "filename (multi_med_image_ml.records.imagerecord attribute)": [[2, "multi_med_image_ml.Records.ImageRecord.filename"]], "forward() (multi_med_image_ml.models.classifier method)": [[2, "multi_med_image_ml.models.Classifier.forward"]], "forward() (multi_med_image_ml.models.decoder method)": [[2, "multi_med_image_ml.models.Decoder.forward"]], "forward() (multi_med_image_ml.models.encoder method)": [[2, "multi_med_image_ml.models.Encoder.forward"]], "forward() (multi_med_image_ml.models.ensemblemodel method)": [[2, "multi_med_image_ml.models.EnsembleModel.forward"]], "forward() (multi_med_image_ml.models.multiinputmodule method)": [[2, "multi_med_image_ml.models.MultiInputModule.forward"]], "forward() (multi_med_image_ml.models.regressor method)": [[2, "multi_med_image_ml.models.Regressor.forward"]], "forward() (multi_med_image_ml.models.reshape method)": [[2, "multi_med_image_ml.models.Reshape.forward"]], "forward_ensemble() (multi_med_image_ml.models.multiinputmodule method)": [[2, "multi_med_image_ml.models.MultiInputModule.forward_ensemble"]], "get() (multi_med_image_ml.records.allrecords method)": [[2, "multi_med_image_ml.Records.AllRecords.get"]], "get_c() (multi_med_image_ml.records.batchrecord method)": [[2, "multi_med_image_ml.Records.BatchRecord.get_C"]], "get_c() (multi_med_image_ml.records.imagerecord method)": [[2, "multi_med_image_ml.Records.ImageRecord.get_C"]], "get_c_dud() (multi_med_image_ml.records.batchrecord method)": [[2, "multi_med_image_ml.Records.BatchRecord.get_C_dud"]], "get_c_dud() (multi_med_image_ml.records.imagerecord method)": [[2, "multi_med_image_ml.Records.ImageRecord.get_C_dud"]], "get_id() (multi_med_image_ml.databasewrapper.databasewrapper method)": [[2, "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper.get_ID"]], "get_x() (multi_med_image_ml.records.batchrecord method)": [[2, "multi_med_image_ml.Records.BatchRecord.get_X"]], "get_x() (multi_med_image_ml.records.imagerecord method)": [[2, "multi_med_image_ml.Records.ImageRecord.get_X"]], "get_y() (multi_med_image_ml.records.batchrecord method)": [[2, "multi_med_image_ml.Records.BatchRecord.get_Y"]], "get_y() (multi_med_image_ml.records.imagerecord method)": [[2, "multi_med_image_ml.Records.ImageRecord.get_Y"]], "get_acc() (multi_med_image_ml.multiinputtester.filerecord method)": [[2, "multi_med_image_ml.MultiInputTester.FileRecord.get_acc"]], "get_age_arr() (in module multi_med_image_ml.models)": [[2, "multi_med_image_ml.models.get_age_arr"]], "get_age_encoding() (in module multi_med_image_ml.models)": [[2, "multi_med_image_ml.models.get_age_encoding"]], "get_balanced_filename_list() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.get_balanced_filename_list"]], "get_birth_date() (multi_med_image_ml.databasewrapper.databasewrapper method)": [[2, "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper.get_birth_date"]], "get_birth_date() (multi_med_image_ml.records.record method)": [[2, "multi_med_image_ml.Records.Record.get_birth_date"]], "get_birth_dates() (multi_med_image_ml.records.batchrecord method)": [[2, "multi_med_image_ml.Records.BatchRecord.get_birth_dates"]], "get_class_selection() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.get_class_selection"]], "get_confirm_token() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.get_confirm_token"]], "get_confound_encode() (multi_med_image_ml.databasewrapper.databasewrapper method)": [[2, "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper.get_confound_encode"]], "get_data_from_filenames() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.get_data_from_filenames"]], "get_dim_str() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.get_dim_str"]], "get_divides() (multi_med_image_ml.multiinputtester.filerecord method)": [[2, "multi_med_image_ml.MultiInputTester.FileRecord.get_divides"]], "get_exam_date() (multi_med_image_ml.databasewrapper.databasewrapper method)": [[2, "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper.get_exam_date"]], "get_exam_date() (multi_med_image_ml.records.record method)": [[2, "multi_med_image_ml.Records.Record.get_exam_date"]], "get_exam_dates() (multi_med_image_ml.records.batchrecord method)": [[2, "multi_med_image_ml.Records.BatchRecord.get_exam_dates"]], "get_file_list() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.get_file_list"]], "get_file_list() (multi_med_image_ml.databasewrapper.databasewrapper method)": [[2, "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper.get_file_list"]], "get_file_list() (multi_med_image_ml.medimageloader.medimageloader method)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.get_file_list"]], "get_file_list_from_list() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.get_file_list_from_list"]], "get_file_list_from_str() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.get_file_list_from_str"]], "get_filetypes_diff_date() (multi_med_image_ml.multiinputtester.filerecord method)": [[2, "multi_med_image_ml.MultiInputTester.FileRecord.get_filetypes_diff_date"]], "get_filetypes_name_modality() (multi_med_image_ml.multiinputtester.filerecord method)": [[2, "multi_med_image_ml.MultiInputTester.FileRecord.get_filetypes_name_modality"]], "get_filetypes_name_modality_num() (multi_med_image_ml.multiinputtester.filerecord method)": [[2, "multi_med_image_ml.MultiInputTester.FileRecord.get_filetypes_name_modality_num"]], "get_filetypes_name_num() (multi_med_image_ml.multiinputtester.filerecord method)": [[2, "multi_med_image_ml.MultiInputTester.FileRecord.get_filetypes_name_num"]], "get_filetypes_name_num_modality() (multi_med_image_ml.multiinputtester.filerecord method)": [[2, "multi_med_image_ml.MultiInputTester.FileRecord.get_filetypes_name_num_modality"]], "get_first_n_primes() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.get_first_n_primes"]], "get_image_type() (multi_med_image_ml.records.imagerecord method)": [[2, "multi_med_image_ml.Records.ImageRecord.get_image_type"]], "get_label_encode() (multi_med_image_ml.databasewrapper.databasewrapper method)": [[2, "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper.get_label_encode"]], "get_lr() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.get_lr"]], "get_mean_accuracy() (multi_med_image_ml.multiinputtester.pidrecord method)": [[2, "multi_med_image_ml.MultiInputTester.PIDRecord.get_mean_accuracy"]], "get_mean_modality() (multi_med_image_ml.multiinputtester.pidrecord method)": [[2, "multi_med_image_ml.MultiInputTester.PIDRecord.get_mean_modality"]], "get_mem() (multi_med_image_ml.records.allrecords method)": [[2, "multi_med_image_ml.Records.AllRecords.get_mem"]], "get_mem() (multi_med_image_ml.records.imagerecord method)": [[2, "multi_med_image_ml.Records.ImageRecord.get_mem"]], "get_modality_acc() (multi_med_image_ml.multiinputtester.allrecords method)": [[2, "multi_med_image_ml.MultiInputTester.AllRecords.get_modality_acc"]], "get_modality_auc() (multi_med_image_ml.multiinputtester.allrecords method)": [[2, "multi_med_image_ml.MultiInputTester.AllRecords.get_modality_auc"]], "get_modality_difference() (multi_med_image_ml.multiinputtester.pidrecord method)": [[2, "multi_med_image_ml.MultiInputTester.PIDRecord.get_modality_difference"]], "get_multilabel_acc() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.get_multilabel_acc"]], "get_name() (multi_med_image_ml.multiinputtester.statsrecord method)": [[2, "multi_med_image_ml.MultiInputTester.StatsRecord.get_name"]], "get_none_array() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.get_none_array"]], "get_prime_form() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.get_prime_form"]], "get_record() (multi_med_image_ml.records.patientrecord method)": [[2, "multi_med_image_ml.Records.PatientRecord.get_record"]], "get_records() (multi_med_image_ml.records.patientrecord method)": [[2, "multi_med_image_ml.Records.PatientRecord.get_records"]], "get_static_inputs() (multi_med_image_ml.records.batchrecord method)": [[2, "multi_med_image_ml.Records.BatchRecord.get_static_inputs"]], "get_static_inputs() (multi_med_image_ml.records.record method)": [[2, "multi_med_image_ml.Records.Record.get_static_inputs"]], "get_text_records() (multi_med_image_ml.records.batchrecord method)": [[2, "multi_med_image_ml.Records.BatchRecord.get_text_records"]], "gpu_ids (multi_med_image_ml.records.batchrecord attribute)": [[2, "multi_med_image_ml.Records.BatchRecord.gpu_ids"]], "greatest_modality_difference() (multi_med_image_ml.multiinputtester.allrecords method)": [[2, "multi_med_image_ml.MultiInputTester.AllRecords.greatest_modality_difference"]], "has() (multi_med_image_ml.records.allrecords method)": [[2, "multi_med_image_ml.Records.AllRecords.has"]], "has_im() (multi_med_image_ml.databasewrapper.databasewrapper method)": [[2, "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper.has_im"]], "hidden_batch_predictions() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.hidden_batch_predictions"]], "image (multi_med_image_ml.records.imagerecord attribute)": [[2, "multi_med_image_ml.Records.ImageRecord.image"]], "image_dict (multi_med_image_ml.records.allrecords attribute)": [[2, "multi_med_image_ml.Records.AllRecords.image_dict"]], "image_records (multi_med_image_ml.records.batchrecord attribute)": [[2, "multi_med_image_ml.Records.BatchRecord.image_records"]], "in_val_ranges() (multi_med_image_ml.databasewrapper.databasewrapper method)": [[2, "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper.in_val_ranges"]], "index (multi_med_image_ml.multiinputtrainer.multiinputtrainer attribute)": [[2, "multi_med_image_ml.MultiInputTrainer.MultiInputTrainer.index"]], "integrate_arrs() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.integrate_arrs"]], "integrate_arrs_none() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.integrate_arrs_none"]], "is_dicom() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.is_dicom"]], "is_float() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.is_float"]], "is_image_file() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.is_image_file"]], "is_list_str() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.is_list_str"]], "is_nan() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.is_nan"]], "jdict (multi_med_image_ml.databasewrapper.databasewrapper attribute)": [[2, "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper.jdict"]], "json_file (multi_med_image_ml.records.imagerecord attribute)": [[2, "multi_med_image_ml.Records.ImageRecord.json_file"]], "key() (multi_med_image_ml.records.filelookup method)": [[2, "multi_med_image_ml.Records.FileLookup.key"]], "key_to_filename (multi_med_image_ml.databasewrapper.databasewrapper attribute)": [[2, "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper.key_to_filename"]], "key_to_filename (multi_med_image_ml.medimageloader.medimageloader attribute)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.key_to_filename"]], "key_to_filename_default() (in module multi_med_image_ml.medimageloader)": [[2, "multi_med_image_ml.MedImageLoader.key_to_filename_default"]], "key_to_filename_default() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.key_to_filename_default"]], "label (multi_med_image_ml.medimageloader.medimageloader attribute)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.label"]], "label_to_community() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.label_to_community"]], "labels (multi_med_image_ml.databasewrapper.databasewrapper attribute)": [[2, "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper.labels"]], "latent_dim (multi_med_image_ml.models.multiinputmodule attribute)": [[2, "multi_med_image_ml.models.MultiInputModule.latent_dim"]], "list_to_str() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.list_to_str"]], "load_extra_info() (multi_med_image_ml.records.record method)": [[2, "multi_med_image_ml.Records.Record.load_extra_info"]], "load_image_stack() (multi_med_image_ml.medimageloader.medimageloader method)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.load_image_stack"]], "load_state_dict() (multi_med_image_ml.models.multiinputmodule method)": [[2, "multi_med_image_ml.models.MultiInputModule.load_state_dict"]], "load_state_dict() (multi_med_image_ml.models.regressor method)": [[2, "multi_med_image_ml.models.Regressor.load_state_dict"]], "loaded (multi_med_image_ml.records.imagerecord attribute)": [[2, "multi_med_image_ml.Records.ImageRecord.loaded"]], "loc_val() (multi_med_image_ml.databasewrapper.databasewrapper method)": [[2, "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper.loc_val"]], "loop() (multi_med_image_ml.multiinputtrainer.multiinputtrainer method)": [[2, "multi_med_image_ml.MultiInputTrainer.MultiInputTrainer.loop"]], "loss_function (multi_med_image_ml.multiinputtrainer.multiinputtrainer attribute)": [[2, "multi_med_image_ml.MultiInputTrainer.MultiInputTrainer.loss_function"]], "loss_image_dir (multi_med_image_ml.multiinputtrainer.multiinputtrainer attribute)": [[2, "multi_med_image_ml.MultiInputTrainer.MultiInputTrainer.loss_image_dir"]], "lr (multi_med_image_ml.multiinputtrainer.multiinputtrainer attribute)": [[2, "multi_med_image_ml.MultiInputTrainer.MultiInputTrainer.lr"]], "match_confounds (multi_med_image_ml.medimageloader.medimageloader attribute)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.match_confounds"]], "mem_limit (multi_med_image_ml.records.allrecords attribute)": [[2, "multi_med_image_ml.Records.AllRecords.mem_limit"]], "merge_modality_pids() (multi_med_image_ml.multiinputtester.allrecords method)": [[2, "multi_med_image_ml.MultiInputTester.AllRecords.merge_modality_pids"]], "mod_meas() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.mod_meas"]], "model (multi_med_image_ml.multiinputtrainer.multiinputtrainer attribute)": [[2, "multi_med_image_ml.MultiInputTrainer.MultiInputTrainer.model"]], "module": [[2, "module-multi_med_image_ml"], [2, "module-multi_med_image_ml.DataBaseWrapper"], [2, "module-multi_med_image_ml.MedImageLoader"], [2, "module-multi_med_image_ml.MultiInputTester"], [2, "module-multi_med_image_ml.MultiInputTrainer"], [2, "module-multi_med_image_ml.Records"], [2, "module-multi_med_image_ml.models"], [2, "module-multi_med_image_ml.utils"]], "multi_mannwhitneyu() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.multi_mannwhitneyu"]], "multi_med_image_ml": [[2, "module-multi_med_image_ml"]], "multi_med_image_ml.databasewrapper": [[2, "module-multi_med_image_ml.DataBaseWrapper"]], "multi_med_image_ml.medimageloader": [[2, "module-multi_med_image_ml.MedImageLoader"]], "multi_med_image_ml.multiinputtester": [[2, "module-multi_med_image_ml.MultiInputTester"]], "multi_med_image_ml.multiinputtrainer": [[2, "module-multi_med_image_ml.MultiInputTrainer"]], "multi_med_image_ml.records": [[2, "module-multi_med_image_ml.Records"]], "multi_med_image_ml.models": [[2, "module-multi_med_image_ml.models"]], "multi_med_image_ml.utils": [[2, "module-multi_med_image_ml.utils"]], "n_dyn_inputs (multi_med_image_ml.models.multiinputmodule attribute)": [[2, "multi_med_image_ml.models.MultiInputModule.n_dyn_inputs"]], "n_stat_inputs (multi_med_image_ml.models.multiinputmodule attribute)": [[2, "multi_med_image_ml.models.MultiInputModule.n_stat_inputs"]], "name (multi_med_image_ml.multiinputtrainer.multiinputtrainer attribute)": [[2, "multi_med_image_ml.MultiInputTrainer.MultiInputTrainer.name"]], "name() (multi_med_image_ml.medimageloader.medimageloader method)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.name"]], "name() (multi_med_image_ml.records.batchrecord method)": [[2, "multi_med_image_ml.Records.BatchRecord.name"]], "nifti_to_np() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.nifti_to_np"]], "not_temp() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.not_temp"]], "npy_file (multi_med_image_ml.records.imagerecord attribute)": [[2, "multi_med_image_ml.Records.ImageRecord.npy_file"]], "npy_file() (multi_med_image_ml.records.filelookup method)": [[2, "multi_med_image_ml.Records.FileLookup.npy_file"]], "num_training_samples (multi_med_image_ml.models.multiinputmodule attribute)": [[2, "multi_med_image_ml.models.MultiInputModule.num_training_samples"]], "obj_size (multi_med_image_ml.records.allrecords attribute)": [[2, "multi_med_image_ml.Records.AllRecords.obj_size"]], "one_step (multi_med_image_ml.multiinputtrainer.multiinputtrainer attribute)": [[2, "multi_med_image_ml.MultiInputTrainer.MultiInputTrainer.one_step"]], "optimizer (multi_med_image_ml.multiinputtrainer.multiinputtrainer attribute)": [[2, "multi_med_image_ml.MultiInputTrainer.MultiInputTrainer.optimizer"]], "optimizer_reg (multi_med_image_ml.multiinputtrainer.multiinputtrainer attribute)": [[2, "multi_med_image_ml.MultiInputTrainer.MultiInputTrainer.optimizer_reg"]], "out_dataframe() (multi_med_image_ml.databasewrapper.databasewrapper method)": [[2, "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper.out_dataframe"]], "output_auc() (multi_med_image_ml.multiinputtester.statsrecord method)": [[2, "multi_med_image_ml.MultiInputTester.StatsRecord.output_auc"]], "output_test() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.output_test"]], "pandas_cache (multi_med_image_ml.medimageloader.medimageloader attribute)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.pandas_cache"]], "parameters() (multi_med_image_ml.models.classifier method)": [[2, "multi_med_image_ml.models.Classifier.parameters"]], "parameters() (multi_med_image_ml.models.encoder method)": [[2, "multi_med_image_ml.models.Encoder.parameters"]], "parameters() (multi_med_image_ml.models.regressor method)": [[2, "multi_med_image_ml.models.Regressor.parameters"]], "parse_date() (multi_med_image_ml.databasewrapper.databasewrapper method)": [[2, "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper.parse_date"]], "parsedate() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.parsedate"]], "pid (multi_med_image_ml.records.patientrecord attribute)": [[2, "multi_med_image_ml.Records.PatientRecord.pid"]], "plot() (multi_med_image_ml.multiinputtester.allrecords method)": [[2, "multi_med_image_ml.MultiInputTester.AllRecords.plot"]], "prime() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.prime"]], "print_numpy() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.print_numpy"]], "print_record() (multi_med_image_ml.multiinputtester.filerecord method)": [[2, "multi_med_image_ml.MultiInputTester.FileRecord.print_record"]], "print_record() (multi_med_image_ml.multiinputtester.pidrecord method)": [[2, "multi_med_image_ml.MultiInputTester.PIDRecord.print_record"]], "read_image() (multi_med_image_ml.records.imagerecord method)": [[2, "multi_med_image_ml.Records.ImageRecord.read_image"]], "read_json() (multi_med_image_ml.multiinputtester.multiinputtester method)": [[2, "multi_med_image_ml.MultiInputTester.MultiInputTester.read_json"]], "read_record() (multi_med_image_ml.medimageloader.medimageloader method)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.read_record"]], "recompute_selection_ratios() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.recompute_selection_ratios"]], "record() (multi_med_image_ml.medimageloader.medimageloader method)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.record"]], "record() (multi_med_image_ml.multiinputtester.statsrecord method)": [[2, "multi_med_image_ml.MultiInputTester.StatsRecord.record"]], "regressor (multi_med_image_ml.models.multiinputmodule attribute)": [[2, "multi_med_image_ml.models.MultiInputModule.regressor"]], "regressor_freeze() (multi_med_image_ml.models.multiinputmodule method)": [[2, "multi_med_image_ml.models.MultiInputModule.regressor_freeze"]], "remove_uncertain (multi_med_image_ml.models.multiinputmodule attribute)": [[2, "multi_med_image_ml.models.MultiInputModule.remove_uncertain"]], "resize_np() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.resize_np"]], "rotate_labels() (multi_med_image_ml.medimageloader.medimageloader method)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.rotate_labels"]], "save_image() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.save_image"]], "save_latest_freq (multi_med_image_ml.multiinputtrainer.multiinputtrainer attribute)": [[2, "multi_med_image_ml.MultiInputTrainer.MultiInputTrainer.save_latest_freq"]], "save_ram (multi_med_image_ml.medimageloader.medimageloader attribute)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.save_ram"]], "save_response_content() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.save_response_content"]], "separate_set() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.separate_set"]], "stack_list_by_label() (multi_med_image_ml.databasewrapper.databasewrapper method)": [[2, "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper.stack_list_by_label"]], "state_dict() (multi_med_image_ml.models.multiinputmodule method)": [[2, "multi_med_image_ml.models.MultiInputModule.state_dict"]], "state_dict() (multi_med_image_ml.models.regressor method)": [[2, "multi_med_image_ml.models.Regressor.state_dict"]], "static_input_res (multi_med_image_ml.records.imagerecord attribute)": [[2, "multi_med_image_ml.Records.ImageRecord.static_input_res"]], "static_inputs (multi_med_image_ml.medimageloader.medimageloader attribute)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.static_inputs"]], "static_inputs (multi_med_image_ml.records.imagerecord attribute)": [[2, "multi_med_image_ml.Records.ImageRecord.static_inputs"]], "static_record (multi_med_image_ml.models.multiinputmodule attribute)": [[2, "multi_med_image_ml.models.MultiInputModule.static_record"]], "str_to_list() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.str_to_list"]], "switch_stack() (multi_med_image_ml.medimageloader.medimageloader method)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.switch_stack"]], "tensor2im() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.tensor2im"]], "test() (multi_med_image_ml.multiinputtester.multiinputtester method)": [[2, "multi_med_image_ml.MultiInputTester.MultiInputTester.test"]], "test() (multi_med_image_ml.multiinputtrainer.multiinputtrainer method)": [[2, "multi_med_image_ml.MultiInputTrainer.MultiInputTrainer.test"]], "test_all() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.test_all"]], "test_grad_cam() (multi_med_image_ml.multiinputtester.multiinputtester method)": [[2, "multi_med_image_ml.MultiInputTester.MultiInputTester.test_grad_cam"]], "text_to_bin() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.text_to_bin"]], "time_index() (in module multi_med_image_ml.models)": [[2, "multi_med_image_ml.models.time_index"]], "times_called (multi_med_image_ml.records.imagerecord attribute)": [[2, "multi_med_image_ml.Records.ImageRecord.times_called"]], "tl() (multi_med_image_ml.medimageloader.medimageloader method)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.tl"]], "training (multi_med_image_ml.models.classifier attribute)": [[2, "multi_med_image_ml.models.Classifier.training"]], "training (multi_med_image_ml.models.decoder attribute)": [[2, "multi_med_image_ml.models.Decoder.training"]], "training (multi_med_image_ml.models.encoder attribute)": [[2, "multi_med_image_ml.models.Encoder.training"]], "training (multi_med_image_ml.models.ensemblemodel attribute)": [[2, "multi_med_image_ml.models.EnsembleModel.training"]], "training (multi_med_image_ml.models.multiinputmodule attribute)": [[2, "multi_med_image_ml.models.MultiInputModule.training"]], "training (multi_med_image_ml.models.regressor attribute)": [[2, "multi_med_image_ml.models.Regressor.training"]], "training (multi_med_image_ml.models.reshape attribute)": [[2, "multi_med_image_ml.models.Reshape.training"]], "update() (multi_med_image_ml.multiinputtester.statsrecord method)": [[2, "multi_med_image_ml.MultiInputTester.StatsRecord.update"]], "use_attn (multi_med_image_ml.models.multiinputmodule attribute)": [[2, "multi_med_image_ml.models.MultiInputModule.use_attn"]], "val_ranges (multi_med_image_ml.databasewrapper.databasewrapper attribute)": [[2, "multi_med_image_ml.DataBaseWrapper.DataBaseWrapper.val_ranges"]], "val_ranges (multi_med_image_ml.medimageloader.medimageloader attribute)": [[2, "multi_med_image_ml.MedImageLoader.MedImageLoader.val_ranges"]], "validate_database() (in module multi_med_image_ml.utils)": [[2, "multi_med_image_ml.utils.validate_database"]], "variational (multi_med_image_ml.models.multiinputmodule attribute)": [[2, "multi_med_image_ml.models.MultiInputModule.variational"]], "verbose (multi_med_image_ml.multiinputtrainer.multiinputtrainer attribute)": [[2, "multi_med_image_ml.MultiInputTrainer.MultiInputTrainer.verbose"]], "weights (multi_med_image_ml.models.multiinputmodule attribute)": [[2, "multi_med_image_ml.models.MultiInputModule.weights"]], "y_on_c (multi_med_image_ml.records.imagerecord attribute)": [[2, "multi_med_image_ml.Records.ImageRecord.y_on_c"]]}})